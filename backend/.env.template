# ============================================================================
# ENEO BACKEND ENVIRONMENT CONFIGURATION
# ============================================================================
# Copy this file to .env and update values for your environment
# ============================================================================

# ----------------------------------------------------------------------------
# Infrastructure (REQUIRED)
# ----------------------------------------------------------------------------
# PostgreSQL database
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_PORT=5432
POSTGRES_HOST=localhost
POSTGRES_DB=postgres

# Redis cache
REDIS_HOST=localhost
REDIS_PORT=6379

# ----------------------------------------------------------------------------
# Security (REQUIRED)
# ----------------------------------------------------------------------------
API_PREFIX=/api/v1
API_KEY_LENGTH=64
API_KEY_HEADER_NAME=example
JWT_AUDIENCE=*
JWT_ISSUER=EXAMPLE
JWT_EXPIRY_TIME=86000
JWT_ALGORITHM=HS256

# JWT_SECRET - CRITICAL FOR PRODUCTION
# Signs OIDC state tokens and user authentication tokens
# WARNING: Default value below is WEAK and for development only!
# Minimum strength: 32 characters (256+ bits)
# Generate strong secret: python -c 'import secrets; print(secrets.token_hex(32))'
JWT_SECRET=1234

JWT_TOKEN_PREFIX=
URL_SIGNING_KEY=

# ----------------------------------------------------------------------------
# Authentication Configuration
# ----------------------------------------------------------------------------
# Choose ONE of two modes:
#   1. Single-Tenant OIDC: One shared IdP for all users (recommended for most)
#   2. Multi-Tenant Federation: Each tenant has their own IdP (enterprise)
# ----------------------------------------------------------------------------

# PUBLIC_ORIGIN (REQUIRED for OIDC authentication)
# The externally-reachable URL where users access Eneo
# Used to construct OIDC redirect_uri (e.g., {PUBLIC_ORIGIN}/auth/callback)
# Auto-seeded into allowed_origins for SSR login during init_db/migrations
# Must match:
#   1. What users see in their browser address bar
#   2. What's registered in your OIDC provider (Auth0, Azure AD, etc.)
#   3. Frontend PUBLIC_ORIGIN setting
# Examples:
#   Development:  PUBLIC_ORIGIN=https://localhost:3000
#   Test (proxy): PUBLIC_ORIGIN=https://m00-https-eneo-test.login.sundsvall.se
#   Production:   PUBLIC_ORIGIN=https://eneo.sundsvall.se
PUBLIC_ORIGIN=

# SINGLE-TENANT OIDC MODE (Default - Recommended)
# Direct login via one identity provider for all users
# Users are automatically redirected to the IdP login page
# ----------------------------------------------------------------------------
# OIDC discovery endpoint URL (auto-configures authorization/token/jwks endpoints)
# Examples:
#   Auth0: https://{your-domain}.auth0.com/.well-known/openid-configuration
#   Azure/Entra ID: https://login.microsoftonline.com/{tenant-id}/v2.0/.well-known/openid-configuration
#   Keycloak: https://{keycloak-url}/realms/{realm-name}/.well-known/openid-configuration
OIDC_DISCOVERY_ENDPOINT=

# OIDC client credentials (from your IdP application registration)
OIDC_CLIENT_ID=
OIDC_CLIENT_SECRET=

# [OPTIONAL] OIDC tenant ID (for backward compatibility with user creation)
OIDC_TENANT_ID=

# MULTI-TENANT FEDERATION MODE (Enterprise Only)
# Enable per-tenant identity providers (each tenant configures their own IdP)
# Requires ENCRYPTION_KEY and tenant configuration via sysadmin API
# ----------------------------------------------------------------------------
FEDERATION_PER_TENANT_ENABLED=false

# OIDC Safety Controls
# Protect against configuration drift during authentication flows
# ----------------------------------------------------------------------------
# [OPTIONAL] OIDC state JWT lifetime (default: 600 = 10 minutes)
# Limits time window for CSRF attacks
OIDC_STATE_TTL_SECONDS=600

# [OPTIONAL] Grace period for redirect URI changes (default: 600 = 10 minutes)
# Allows auth to complete if admin changes PUBLIC_ORIGIN during user login
OIDC_REDIRECT_GRACE_PERIOD_SECONDS=600

# [OPTIONAL] Strict redirect URI validation (default: true)
# Set to false ONLY if experiencing IdP-specific redirect issues
STRICT_OIDC_REDIRECT_VALIDATION=true

# [OPTIONAL] Clock drift tolerance for OIDC JWT validation (default: 120 seconds)
# Prevents ImmatureSignatureError when IdP server clock is slightly ahead
# Allows tokens with iat (issued-at) up to N seconds in the future
# Set to 0 to disable (strict clock validation)
OIDC_CLOCK_LEEWAY_SECONDS=120

# ----------------------------------------------------------------------------
# Encryption & Multi-Tenant Features
# ----------------------------------------------------------------------------
# ENCRYPTION_KEY is REQUIRED when enabling:
#   - TENANT_CREDENTIALS_ENABLED=true (tenant-specific LLM API keys)
#   - FEDERATION_PER_TENANT_ENABLED=true (tenant-specific IdPs)
# Generate key: uv run python -m intric.cli.generate_encryption_key
# Format: 44-character base64-encoded Fernet key
# Example: FNVdDyfq0lBPAvjz_WS-9PB2UQzkbqCnwuA4KU9UbPU=
# WARNING: Backup this key securely - cannot decrypt without it
# ----------------------------------------------------------------------------
ENCRYPTION_KEY=

# Tenant-specific LLM credentials
# Enable municipalities to configure their own API keys per tenant
TENANT_CREDENTIALS_ENABLED=false

# ----------------------------------------------------------------------------
# LLM Provider API Keys (Global/Fallback)
# ----------------------------------------------------------------------------
# Behavior depends on TENANT_CREDENTIALS_ENABLED setting:
#
# STRICT MODE (TENANT_CREDENTIALS_ENABLED=true):
#   - Tenant has configured key → tenant key is used
#   - Tenant has NO key → ERROR (no fallback to global)
#   - Tenant key is INVALID → ERROR (no fallback to global)
#   Each tenant MUST configure their own keys to prevent billing confusion.
#
# SINGLE-TENANT MODE (TENANT_CREDENTIALS_ENABLED=false):
#   - Tenant has configured key → tenant key is used
#   - Tenant has NO key → global key is used (fallback)
#   - Tenant key is INVALID → ERROR (no fallback to global)
# ----------------------------------------------------------------------------

# OpenAI (GPT models)
# Get from: https://platform.openai.com/api-keys
# Format: sk-proj-abc123...xyz789
OPENAI_API_KEY=

# Anthropic (Claude models)
# Get from: https://console.anthropic.com/
# Format: sk-ant-api03-abc123...xyz789
ANTHROPIC_API_KEY=

# Azure OpenAI
# Get from: Azure Portal → Azure OpenAI Service → Keys and Endpoint
# Requires ALL 4 fields below:
AZURE_API_KEY=
AZURE_ENDPOINT=
AZURE_API_BASE=
AZURE_MODEL_DEPLOYMENT=
AZURE_API_VERSION=

# Other LLM Providers
MISTRAL_API_KEY=
OVHCLOUD_API_KEY=

# Berget.ai (Swedish-hosted models)
# Get from: https://berget.ai/
BERGET_API_KEY=
BERGET_API_BASE=

# GDM.se (Swedish AI provider)
# Get from: https://ai.gdm.se/
GDM_API_KEY=
# GDM_API_BASE=https://ai.gdm.se/api/v1  # Optional: Override default base URL

# Flux (Image generation)
FLUX_API_KEY=

# Tavily (Web search)
TAVILY_API_KEY=

# Self-hosted services
INFINITY_URL=

# vLLM (Self-hosted models)
# URL: http://localhost:8000 or http://vllm.internal:8000
# For multi-tenant: Each tenant can configure their own via API
VLLM_MODEL_URL=
VLLM_API_KEY=

# Internal services
INTRIC_MARKETPLACE_API_KEY=
INTRIC_MARKETPLACE_URL=
INTRIC_SUPER_API_KEY=
INTRIC_SUPER_DUPER_API_KEY=

# ----------------------------------------------------------------------------
# Background Worker Configuration
# ----------------------------------------------------------------------------
# Controls ARQ worker pool behavior and per-tenant concurrency fairness
# Prevents "noisy neighbor" where one tenant monopolizes all worker slots
# ----------------------------------------------------------------------------
# [OPTIONAL] Max concurrent jobs across all tenants (default: 20)
# Memory impact: Each job uses 100-500MB depending on task (crawl vs upload)
# Recommendation: 10-15 for <8GB RAM, 20+ for 16GB+ RAM
WORKER_MAX_CONCURRENT_JOBS=20

# [OPTIONAL] Max concurrent jobs per tenant (default: 4)
# Prevents one tenant from monopolizing worker slots
# Set to 0 to disable (not recommended for multi-tenant)
TENANT_WORKER_CONCURRENCY_LIMIT=4

# [OPTIONAL] Semaphore TTL - auto-cleanup for crashed workers
# Keep >= crawl_max_length so long crawls never drop their semaphore key
TENANT_WORKER_SEMAPHORE_TTL_SECONDS=36000

# [OPTIONAL] Retry delay when tenant hits limit (default: 30 seconds)
# Base delay for exponential backoff: 30s → 60s → 90s → ...
TENANT_WORKER_RETRY_DELAY_SECONDS=30

# [OPTIONAL] Max retry delay cap (default: 300 seconds = 5 minutes)
# Prevents backoff from growing too large during sustained contention
TENANT_WORKER_RETRY_MAX_DELAY_SECONDS=300

# [OPTIONAL] Backoff counter TTL (default: 300 seconds = 5 minutes)
# How long to track retry failures before auto-reset
# Counter resets after successful execution or TTL expiry
TENANT_WORKER_RETRY_BACKOFF_TTL_SECONDS=300

# ----------------------------------------------------------------------------
# Feature Flags
# ----------------------------------------------------------------------------
USING_ACCESS_MANAGEMENT=True
USING_AZURE_MODELS=False
USING_IAM=False
USING_IMAGE_GENERATION=False
USING_CRAWL=True
TESTING=False
DEV=False

# ----------------------------------------------------------------------------
# File Upload Limits (bytes)
# ----------------------------------------------------------------------------
UPLOAD_FILE_TO_SESSION_MAX_SIZE=10485760
UPLOAD_IMAGE_TO_SESSION_MAX_SIZE=10485760
UPLOAD_MAX_FILE_SIZE=10485760
TRANSCRIPTION_MAX_FILE_SIZE=10485760
MAX_IN_QUESTION=1

# ----------------------------------------------------------------------------
# Web Crawling Configuration
# ----------------------------------------------------------------------------
# [OPTIONAL] Max crawl duration (default: 14400 = 4 hours)
CRAWL_MAX_LENGTH=14400
# [OPTIONAL] Max items before stopping (default: 20000)
CLOSESPIDER_ITEMCOUNT=20000
# [OPTIONAL] Respect robots.txt (default: True)
OBEY_ROBOTS=True
# [OPTIONAL] Auto-throttle requests (default: True)
AUTOTHROTTLE_ENABLED=True

# ----------------------------------------------------------------------------
# Integration OAuth Callbacks
# ----------------------------------------------------------------------------
OAUTH_CALLBACK_URL=
CONFLUENCE_CLIENT_ID=
CONFLUENCE_CLIENT_SECRET=
SHAREPOINT_CLIENT_ID=
SHAREPOINT_CLIENT_SECRET=

# ----------------------------------------------------------------------------
# Default Tenant & User (Development)
# ----------------------------------------------------------------------------
DEFAULT_TENANT_NAME=ExampleTenant
DEFAULT_TENANT_QUOTA_LIMIT=10737418240
DEFAULT_USER_NAME=ExampleUser
DEFAULT_USER_EMAIL=user@example.com
DEFAULT_USER_PASSWORD=Password1!

# ----------------------------------------------------------------------------
# Migration & Maintenance
# ----------------------------------------------------------------------------
# Auto-recalculate usage stats threshold for model migrations
# If migration affects ≤ this many entities, stats auto-recalculated
# If > this many, manual recalculation required via sysadmin endpoint
MIGRATION_AUTO_RECALC_THRESHOLD=30

# ----------------------------------------------------------------------------
# Logging
# ----------------------------------------------------------------------------
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOGLEVEL=DEBUG

# ----------------------------------------------------------------------------
# Legacy Authentication (DEPRECATED - Use OIDC_* variables instead)
# ----------------------------------------------------------------------------
# MobilityGuard & Zitadel Configuration
# DEPRECATED: Auto-migrated to OIDC_* on startup (will be removed in v3.0)
#
# MobilityGuard IS an OIDC provider - use the generic OIDC configuration above:
#   OIDC_DISCOVERY_ENDPOINT=https://login.mobilityguard.com/.well-known/openid-configuration
#   OIDC_CLIENT_ID=your-client-id
#   OIDC_CLIENT_SECRET=your-client-secret
#
# Zitadel IS an OIDC provider - use the generic OIDC configuration above:
#   OIDC_DISCOVERY_ENDPOINT=https://your-zitadel-instance.com/.well-known/openid-configuration
#   OIDC_CLIENT_ID=your-client-id
#   OIDC_CLIENT_SECRET=your-client-secret
# ----------------------------------------------------------------------------
MOBILITYGUARD_DISCOVERY_ENDPOINT=
MOBILITYGUARD_CLIENT_ID=
MOBILITYGUARD_CLIENT_SECRET=
MOBILITYGUARD_TENANT_ID=
