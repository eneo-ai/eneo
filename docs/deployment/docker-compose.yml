version: '3.8'

services:
  traefik:
    image: traefik:v3.0
    container_name: eneo_traefik
    restart: unless-stopped
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=your-email@domain.com"  # CHANGE THIS
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik_letsencrypt:/letsencrypt"
    networks:
      - proxy_tier
    labels:
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

  frontend:
    image: ghcr.io/eneo-ai/eneo-frontend:latest
    container_name: eneo_frontend
    restart: unless-stopped
    env_file:
      - env_frontend.env
    networks:
      - proxy_tier
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.eneo-frontend.rule=Host(`your-domain.com`)"  # CHANGE THIS
      - "traefik.http.routers.eneo-frontend.entrypoints=web"
      - "traefik.http.routers.eneo-frontend.middlewares=redirect-to-https"
      - "traefik.http.routers.eneo-frontend-secure.rule=Host(`your-domain.com`)"  # CHANGE THIS
      - "traefik.http.routers.eneo-frontend-secure.entrypoints=websecure"
      - "traefik.http.routers.eneo-frontend-secure.tls=true"
      - "traefik.http.routers.eneo-frontend-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.eneo-frontend-secure.service=eneo-frontend-svc"
      - "traefik.http.services.eneo-frontend-svc.loadbalancer.server.port=3000"
      - "traefik.http.routers.eneo-frontend-secure.priority=1"
    depends_on:
      - backend

  backend:
    image: ghcr.io/eneo-ai/eneo-backend:latest
    container_name: eneo_backend
    restart: unless-stopped
    env_file:
      - env_backend.env
    volumes:
      - eneo_backend_data:/app/data
      - eneo_temp_files:/tmp
    networks:
      - proxy_tier
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.eneo-backend.rule=Host(`your-domain.com`) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/openapi.json`) || PathPrefix(`/version`))"  # CHANGE THIS
      - "traefik.http.routers.eneo-backend.entrypoints=web"
      - "traefik.http.routers.eneo-backend.middlewares=redirect-to-https"
      - "traefik.http.routers.eneo-backend-secure.rule=Host(`your-domain.com`) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/openapi.json`) || PathPrefix(`/version`))"  # CHANGE THIS
      - "traefik.http.routers.eneo-backend-secure.entrypoints=websecure"
      - "traefik.http.routers.eneo-backend-secure.tls=true"
      - "traefik.http.routers.eneo-backend-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.eneo-backend-secure.service=eneo-backend-svc"
      - "traefik.http.services.eneo-backend-svc.loadbalancer.server.port=8000"
      - "traefik.http.routers.eneo-backend-secure.priority=10"
    depends_on:
      - db
      - redis
      - db-init

  worker:
    image: ghcr.io/eneo-ai/eneo-backend:latest
    container_name: eneo_worker
    restart: unless-stopped
    command: ["poetry", "run", "arq", "src.intric.worker.arq.WorkerSettings"]
    env_file:
      - env_backend.env
    volumes:
      - eneo_backend_data:/app/data
      - eneo_temp_files:/tmp
    networks:
      - proxy_tier
    depends_on:
      - backend

  db:
    image: pgvector/pgvector:pg16
    container_name: eneo_db
    restart: unless-stopped
    env_file:
      - env_db.env
    volumes:
      - eneo_postgres_data:/var/lib/postgresql/data
    networks:
      - proxy_tier

  redis:
    image: redis:7-alpine
    container_name: eneo_redis
    restart: unless-stopped
    volumes:
      - eneo_redis_data:/data
    networks:
      - proxy_tier

  db-init:
    image: ghcr.io/eneo-ai/eneo-backend:latest
    container_name: eneo_db_init
    command: ["python", "init_db.py"]
    env_file:
      - env_backend.env
    networks:
      - proxy_tier
    depends_on:
      - db

networks:
  proxy_tier:
    external: true

volumes:
  eneo_postgres_data:
  eneo_redis_data:
  eneo_backend_data:
  traefik_letsencrypt:
  eneo_temp_files: